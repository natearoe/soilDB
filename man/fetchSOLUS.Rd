% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetchSOLUS.R
\name{fetchSOLUS}
\alias{fetchSOLUS}
\title{Fetch Soil Landscapes of the United States (SOLUS) Grids}
\usage{
fetchSOLUS(
  x = NULL,
  depth_slices = c("all", "0", "5", "15", "30", "60", "100", "150"),
  variables = c("anylithicdpt", "caco3", "cec7", "claytotal", "dbovendry", "ec", "ecec",
    "fragvol", "gypsum", "ph1to1h2o", "resdept", "sandco", "sandfine", "sandmed",
    "sandtotal", "sandvc", "sandvf", "sar", "silttotal", "soc"),
  filetype = c("prediction", "relative prediction interval",
    "95\% low prediction interval", "95\% high prediction interval"),
  grid = TRUE,
  filename = NULL,
  overwrite = FALSE
)
}
\arguments{
\item{x}{An R spatial object (such as a \emph{SpatVector}, \emph{SpatRaster}, or \emph{sf} object) or a
\emph{SoilProfileCollection} with coordinates initialized via \verb{aqp::initSpatial<-}. Default: \code{NULL} returns
the full extent as a virtual raster. Note that this is nearly 30GB compressed}

\item{depth_slices}{character. One or more of: \code{"all"}, \code{"0"}, \code{"5"}, \code{"15"},
\code{"30"}, \code{"60"}, \code{"100"}, \code{"150"}}

\item{variables}{character. One or more of: \code{"anylithicdpt"}, \code{"caco3"}, \code{"cec7"}, \code{"claytotal"},
\code{"dbovendry"}, \code{"ec"}, \code{"ecec"}, \code{"fragvol"}, \code{"gypsum"}, \code{"ph1to1h2o"}, \code{"resdept"}, \code{"sandco"},
\code{"sandfine"}, \code{"sandmed"}, \code{"sandtotal"}, \code{"sandvc"}, \code{"sandvf"}, \code{"sar"}, \code{"silttotal"}, \code{"soc"}.}

\item{filetype}{character. One or more of: \code{"prediction"}, \code{"relative prediction interval"},
\code{"95\% low prediction interval"}, \code{"95\% high prediction interval"}}

\item{grid}{logical. Not used. Currently default \code{TRUE} always returns a \emph{SpatRaster} object for an extent.}

\item{filename}{character. Path to write output raster file. Default: \code{NULL} will keep result in
memory (or store in temporary file if memory threshold is exceeded)}

\item{overwrite}{Overwrite \code{filename} if it exists? Default: \code{FALSE}}
}
\value{
A \emph{SpatRaster} object containing SOLUS grids for specified extent, depths, variables, and product types.
}
\description{
This tool creates a virtual raster from Cloud Optimized GeoTIFFs (COGs) from the \href{https://agdatacommons.nal.usda.gov/articles/dataset/Data_from_Soil_Landscapes_of_the_United_States_100-meter_SOLUS100_soil_property_maps_project_repository/25033856}{Soil Landscapes of the United States 100-meter (SOLUS100) soil property maps project repository}.
}
\details{
If the input object \code{x} is not specified (\code{NULL} or missing), a \emph{SpatRaster} object using the virtual URLs is returned. The full data
set can be then downloaded and written to file using \code{terra::writeRaster()} or any other processing step specifying an output file name.
When input object \code{x} is specified, a \emph{SpatRaster} object using in memory or local (temporary file or \code{filename}) resources is returned
after downloading the data only for the target extent.
}
\examples{
\dontshow{if (curl::has_internet() && requireNamespace("sf") && requireNamespace("terra")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

b <- c(-119.747629, -119.67935, 36.912019, 36.944987)

bbox.sp <- sf::st_as_sf(wk::rct(
  xmin = b[1], xmax = b[2], ymin = b[3], ymax = b[4],
  crs = sf::st_crs(4326)
))

ssurgo.geom <- soilDB::SDA_spatialQuery(
  bbox.sp,
  what = 'mupolygon',
  db = 'SSURGO',
  geomIntersection = TRUE
)

res <- fetchSOLUS(
  ssurgo.geom,
  depth_slices = "0",
  variables = c("sandtotal", "silttotal", "claytotal", "cec7"),
  filetype = "prediction"
)

terra::plot(res)
\dontshow{\}) # examplesIf}
}
\references{
Nauman, T.W., Kienast-Brown, S., White, D.A. Brungard, C.W., Philippe, J., Roecker, S.M.,
Thompson, J.A. Soil Landscapes of the United States (SOLUS): developing predictive soil property maps
of the conterminous US using hybrid training sets. In Prep for SSSAJ.
}
\author{
Andrew G. Brown
}
